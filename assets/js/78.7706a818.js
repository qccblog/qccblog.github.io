(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{661:function(s,t,e){"use strict";e.r(t);var a=e(17),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("基于种种原因如果不想使用 bit.dev 作为远端 Scope，也可以选择自己搭建一个私有的服务器作为 Scope。使用下来的感觉就是 bit 提供的私有服务其实就是在服务器上部署一个 workspace，然后启动 dev 服务器，然后就可以使用了。")]),s._v(" "),e("h2",{attrs:{id:"本地搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地搭建"}},[s._v("#")]),s._v(" 本地搭建")]),s._v(" "),e("p",[s._v("新建一个空的文件夹作为 workspace，初始化后启动一个服务就是 Scope")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化一个workspace")]),s._v("\nbit init --bare\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行")]),s._v("\nbit start\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("本地其他的工程的 workspace")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加远程地址")]),s._v("\nbit remote "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" http://localhost:3000\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改workspace.jsonc中defaultScope的值为远程scope的值")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# scope的名字就是服务的文件夹名")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 组件可以发布到这个服务scope了")]),s._v("\nbit "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"服务器搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器搭建"}},[s._v("#")]),s._v(" 服务器搭建")]),s._v(" "),e("p",[s._v("如果只是自己本地搭建没啥太大的实际意义，放在服务器上才能方便不同的工程去使用，不过服务器上搭建实际上和本地搭建基本上完全类似的。")]),s._v(" "),e("h3",{attrs:{id:"通过-ssh-访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过-ssh-访问"}},[s._v("#")]),s._v(" 通过 SSH 访问")]),s._v(" "),e("p",[s._v("v15 版本之前官方提供的都是通过 ssh 来使用的，如果准备在服务器直接搭建可以参考 "),e("a",{attrs:{href:"https://docs.bit.dev/docs/bit-server",target:"_blank",rel:"noopener noreferrer"}},[s._v("Bit Server"),e("OutboundLink")],1),s._v("，当然也可以选择使用 "),e("a",{attrs:{href:"https://github.com/teambit/bit-docker/tree/master",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker 部署"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("我根据这个文档来部署的没有成功，后面直接使用 "),e("a",{attrs:{href:"https://hub.docker.com/r/bitteam/bit-docker",target:"_blank",rel:"noopener noreferrer"}},[s._v("bit-docker"),e("OutboundLink")],1),s._v(" 倒是成功了（看起来是官方的）。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name bit -d -P bitteam/bit-docker\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("搭建成功之后就是配置 remote 之类的，和下面将的 http 访问大致差不多，区别就是要设置 ssh 认证方式，可以手动输入用户名密码，也可以通过 authorized_keys 配置公钥免密登录。")]),s._v(" "),e("h3",{attrs:{id:"通过-http-访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过-http-访问"}},[s._v("#")]),s._v(" 通过 http 访问")]),s._v(" "),e("p",[s._v("在 v15 版本提供的可以直接通过 http 访问，总算不用配置一堆 ssh 了，而且还有类似官方的组件管理界面，比之前的要香很多。")]),s._v(" "),e("h4",{attrs:{id:"启动服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动服务"}},[s._v("#")]),s._v(" 启动服务")]),s._v(" "),e("p",[s._v("可以参考 "),e("a",{attrs:{href:"https://harmony-docs.bit.dev/reference/bit-oss-server",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),e("OutboundLink")],1),s._v(" 自行搭建 bit 服务器，主要就是通过 bit start 启动一个服务就行了，实际上就相当于是在服务器的本地搭建，当然建立使用 docker 部署更方便一些。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -dit --name bit -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(":3000 frankqcc/bit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("上述命令会启动一个名叫 bit 的容器里面就是 bit 服务，docker 创建的 scope 默认值是 bit-docker-scope，可以进入容器修改/var/scope 目录下 "),e("code",[s._v("scope.json")]),s._v(" 的 name 值为想要的 scope 名称，然后重启一下容器就行了。")]),s._v(" "),e("h4",{attrs:{id:"本地工程使用组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地工程使用组件"}},[s._v("#")]),s._v(" 本地工程使用组件")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加远程地址")]),s._v("\nbit remote "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" http://xxx:3000\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改workspace.jsonc中defaultScope的值为bit-docker-scope")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入远端scope中ui/button")]),s._v("\nbit "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" bit-docker-scope/ui/button\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("执行完导入命令之后，会发现根目录下新建了一个 bit-docker-scope 文件夹，里面就是导入成功的组件。")]),s._v(" "),e("h2",{attrs:{id:"和-bit-dev-的一些差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#和-bit-dev-的一些差异"}},[s._v("#")]),s._v(" 和 bit.dev 的一些差异")]),s._v(" "),e("p",[s._v("目前发现自行部署的和 bit.dev 提供的服务还是有些不同的，比如登录认证之类的。")]),s._v(" "),e("h3",{attrs:{id:"组件不支持-eject-操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件不支持-eject-操作"}},[s._v("#")]),s._v(" 组件不支持 eject 操作")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("failed to "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("eject")]),s._v(" the following components\ncomponents that were exported to a self hosted scope "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("not bit.dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": bit-scope/ui/button@0.0.1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("通过以上操作基本上就能搭建一个可以使用的 bit 私有服务器了，不过 bit 的私服搭建教程没有提供相关登录认证的配置，如果不想私服在公网被直接访问的话要么放内网，要么自己搞个登录认证。后面讲讲怎么使用 Nginx 配置 HTTP 基本认证来做一个简单的登录认证。")])])}),[],!1,null,null,null);t.default=n.exports}}]);