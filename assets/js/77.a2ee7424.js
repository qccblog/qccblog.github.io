(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{660:function(s,a,t){"use strict";t.r(a);var n=t(17),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("假如你通过 nginx 配置了一个页面，原页面不方便加上认证或者仅仅只是想简单加个身份认证，可以考虑通过给 nginx 配置一个基本认证来实现。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" HTTP 基本认证本身并 "),t("strong",[s._v("不安全")]),s._v("，容易遭到诸如 "),t("em",[s._v("中间人攻击或者重放攻击")]),s._v(" 等安全问题。因此实际使用的时候最好结合 "),t("strong",[s._v("HTTPS")]),s._v(" 一起使用会更安全一些，这种也只使用对安全要求不高的网络环境，如果安全要求高的还是自己做认证更稳。")]),s._v(" "),t("p",[s._v("HTTP 基本认证是什么就不详细描述了，简单说来就是通过浏览器访问一个页面，如果有基本认证就会出现一个输入用户名密码的弹窗，然后把输入的用户名密码 Base64 之后发送到服务器进行认证（ps：安全在哪里）。后面主要是描述怎么通过 nginx 简单配置一个基本认知")]),s._v(" "),t("h2",{attrs:{id:"生成用户名密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成用户名密码"}},[s._v("#")]),s._v(" 生成用户名密码")]),s._v(" "),t("h3",{attrs:{id:"使用-htpasswd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-htpasswd"}},[s._v("#")]),s._v(" 使用 htpasswd")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ubuntu")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y apache2-utils\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# centos")]),s._v("\nyum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" httpd-tools\n\nhtpasswd -c /etc/nginx/.htpasswd admin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("-c 创建 passwdfile.如果 passwdfile 已经存在, 那么它会重新写入并删去原有内容.")]),s._v(" "),t("li",[s._v("-n 不更新 passwordfile，直接显示密码")]),s._v(" "),t("li",[s._v("-m 使用 MD5 加密（默认）")]),s._v(" "),t("li",[s._v("-d 使用 CRYPT 加密（默认）")]),s._v(" "),t("li",[s._v("-p 使用普通文本格式的密码")]),s._v(" "),t("li",[s._v("-s 使用 SHA 加密")]),s._v(" "),t("li",[s._v("-b 命令行中一并输入用户名和密码而不是根据提示输入密码，可以看见明文，不需要交互")]),s._v(" "),t("li",[s._v("-D 删除指定的用户")])]),s._v(" "),t("h3",{attrs:{id:"使用-openssl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-openssl"}},[s._v("#")]),s._v(" 使用 openssl")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin:'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("openssl "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" -crypt "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/nginx/.htpasswd\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这个没试过是否可行，不过没有这个网上找一些在线生成 htpasswd 的工具生成也行。主要就是生成一个用户名和加密码密码的文件就行。")]),s._v(" "),t("h2",{attrs:{id:"修改-nginx-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改-nginx-配置"}},[s._v("#")]),s._v(" 修改 nginx 配置")]),s._v(" "),t("p",[s._v("在 nginx.conf 或者对应的 server 的配置文件中加上一下配置：")]),s._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('location / {  \n    auth_basic "HTTP Basic Authentication";  // 显示的名称\n    auth_basic_user_file /etc/nginx/.htpasswd;  // 加密用户凭据的文件\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("配置修改完成之后先用 "),t("code",[s._v("nginx -t")]),s._v(" 看看配置是否有误，正确后执行 "),t("code",[s._v("nginx -s reload")]),s._v(" 重启 nginx")]),s._v(" "),t("h2",{attrs:{id:"测试使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试使用"}},[s._v("#")]),s._v(" 测试使用")]),s._v(" "),t("p",[s._v("直接在浏览器中输入 url, 会弹出用户名密码输入框, 输入刚刚在配置 nginx 之前生成的用户名密码即可访问。")]),s._v(" "),t("p",[s._v("如果不想每次访问都出现弹窗，可以在 url 地址前加上用户名密码信息即可，比如 "),t("code",[s._v("https://admin:admin@localhost")]),s._v("。")])])}),[],!1,null,null,null);a.default=e.exports}}]);