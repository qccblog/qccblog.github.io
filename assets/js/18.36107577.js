(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{601:function(t,p,v){"use strict";v.r(p);var _=v(17),n=Object(_.a)({},(function(){var t=this,p=t.$createElement,v=t._self._c||p;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("用了很久的的nth-child来写样式，但是却一直没有好好去理解这个，结果用起来总是一知半解的感觉。")]),t._v(" "),v("p",[t._v("今天特地深入的去理解和使用了一下，选择器的使用极大的方便选取想要的标签并修改添加样式。")]),t._v(" "),v("h3",{attrs:{id:"_1-直接使用-nth-child"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-直接使用-nth-child"}},[t._v("#")]),t._v(" 1.直接使用:nth-child()")]),t._v(" "),v("p",[t._v(".parent :nth-child(n){"),v("br"),t._v("\n  background: red;"),v("br"),t._v("\n}"),v("br"),t._v("\n这个选择器匹配属于.parent的第n个子元素以及其子元素的第n个子元素，不论元素的类型。")]),t._v(" "),v("h3",{attrs:{id:""}},[v("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),v("p",[t._v("2.选择特定元素")]),t._v(" "),v("p",[t._v("p:nth-child(2)表示的是其父元素的第二个子元素且为p的这个子元素；")]),t._v(" "),v("p",[t._v("p:nth-child(2n)表示的就是2,4，6...等偶数个为p的子元素；")]),t._v(" "),v("p",[t._v("p:nth-child(2n+1)表示的是1,3,5...等奇数个为p的子元素；")]),t._v(" "),v("p",[t._v("p:nth-child(n+3)表示的是其父元素的大于等于3且为p的子元素")]),t._v(" "),v("p",[t._v("p:nth-child(-n+3)表示的是其父元素的小于等于3且为p的子元素")]),t._v(" "),v("p",[t._v("p:nth-child(odd)表示的是其父元素的奇数个且为p的子元素，效果和2n-1是一样的")]),t._v(" "),v("p",[t._v("p:nth-child(even)表示的是其父元素的偶数个且为p的子元素，效果和2n是一样的")]),t._v(" "),v("p",[t._v("n可以是数字、关键词或公式，从以上的例子可以很容易得出如果n为数字是从0开始的。")]),t._v(" "),v("p",[t._v("需要注意的是，nth-child的个数是不区分元素的类型来算的，如果你选择的那个子元素不是对应的元素类型是不会匹配的。")]),t._v(" "),v("div",{staticClass:"test"},[v("span"),t._v(" "),v("div",[v("span",[t._v("1")]),t._v(" "),v("span",[t._v("2")]),t._v(" "),v("span",[t._v("3")])])]),t._v(" "),v("p",[t._v("如果在上述结构中使用")]),t._v(" "),v("p",[t._v(".test div:nth-child(1) {")]),t._v(" "),v("p",[t._v("backgroud:red;")]),t._v(" "),v("p",[t._v("}")]),t._v(" "),v("p",[t._v("是不会起作用的，原因就是没有相对应的子元素。")]),t._v(" "),v("h3",{attrs:{id:"_3-和其类似的几个选择器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-和其类似的几个选择器"}},[t._v("#")]),t._v(" 3.和其类似的几个选择器")]),t._v(" "),v("p",[t._v(":nth-of-type()基本用法和nth-child()基本相似，最大的不用就是他不用考虑其父元素下面有没有其他的子元素，比如p :nth-of-type(2)选择的就是其父元素下面的第二个p元素，不需要考虑这个p实际上是第几个，而nth-child(2)则需要考虑。")]),t._v(" "),v("p",[t._v(":nth-last-child(n)选择的也是其父元素的第n个子元素，但是是从最后一个子元素开始计数的")]),t._v(" "),v("p",[t._v("p:nth-last-of-type(2)选择的是其父级的第二个p元素，从最后一个子元素计数")]),t._v(" "),v("p",[t._v("p:first-child选择的是其父元素的第一个子元素且为p，效果等同于:nth-child(1)")]),t._v(" "),v("p",[t._v("p:first-of-type选择的是其父元素的第一个为p的子元素")]),t._v(" "),v("p",[t._v("p:last-child选择的是其父元素的最后一个子元素且为p")]),t._v(" "),v("p",[t._v("p:last-of-type选择的是其父元素的最后一个为p的子元素")]),t._v(" "),v("p",[t._v("p:only-child选择的是其父元素有且只有一个子元素且为p的时候被选中")]),t._v(" "),v("p",[t._v("p:only-of-type选择的是其父元素有且只有一个类型为p的子元素，可以有其他类型的子元素")])])}),[],!1,null,null,null);p.default=n.exports}}]);