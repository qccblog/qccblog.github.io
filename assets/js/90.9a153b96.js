(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{673:function(t,s,a){"use strict";a.r(s);var e=a(17),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"现象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现象"}},[t._v("#")]),t._v(" 现象")]),t._v(" "),a("p",[t._v("在使用 React 18 开发应用的时候发现了一个问题就是在 "),a("code",[t._v("useEffect")]),t._v(" 的 "),a("code",[t._v("deps")]),t._v(" 为 "),a("code",[t._v("[]")]),t._v(" 的情况下，里面的内容居然执行了两边。在之前的版本中可不是这么个现象，React18 之前这种情况下应该只会执行一次才是。")]),t._v(" "),a("div",{staticClass:"language-tsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-tsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"First call on mount..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cleanup..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// React18 控制台输出")]),t._v("\nFirst call on mount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\nCleanup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\nFirst call on mount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// React18 之前控制台输出")]),t._v("\nFirst call on mount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("p",[t._v("在官方文档的 "),a("a",{attrs:{href:"https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ensuring reusable state"),a("OutboundLink")],1),t._v(" 中给出了问题出现的原因：React 18 在严格模式的开发环境下会执行一个 check：在一个组件第一次被 mount 的时候，会将组件自动的 unmount 再 remount，在第二次 mount 的时候把组件恢复到之前的状态。")]),t._v(" "),a("p",[t._v("看起来很奇怪的一个设定，实际上是因为 React 是在为后续要添加功能铺路，后面可能允许 React 在保留状态的同时添加或删除部分 UI。比如为了支持在不同的 Tab 之间进行切换的时候可以立刻显示之前的内容，React 支持再次 mount 的时候使用组件 unmount 之前的状态。")]),t._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[t._v("问题既然已经出现，而且大方向算是已经定好，看起来初衷也是不错的（虽然操作让开发者不一定满意，网上相关内容还不少），就看怎么解决了。大多数的组件在这种模式下都是正常的，只有部分情况下是需要处理的，不同场景下可以采取不同的方式进行处理。")]),t._v(" "),a("h3",{attrs:{id:"dom-挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-挂载"}},[t._v("#")]),t._v(" dom 挂载")]),t._v(" "),a("p",[t._v("在 useEffect 中执行挂载 dom 的操作会被挂载两次，这个问题只要在 "),a("code",[t._v("clearup")]),t._v(" 中执行销毁操作，就可以保证不会重复挂载。这个操作实际上是本来就应该要做的，只是如果默认加载一次的情况下很多人或许就会遗漏了这一点。")]),t._v(" "),a("h3",{attrs:{id:"数据请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据请求"}},[t._v("#")]),t._v(" 数据请求")]),t._v(" "),a("p",[t._v("在组件挂载的时候或者根据条件不同进行请求数据的场景也是非常常见的，正常情况下的期望都是只要发送一次请求就够了，如果发送多次请求除了增加服务器压力外更有可能会导致错误。关于数据请求可以参考 "),a("RouterLink",{attrs:{to:"/views/blog/2022/React 中发送请求的方式.html"}},[t._v("React 中发送请求的方式")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"关闭严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭严格模式"}},[t._v("#")]),t._v(" 关闭严格模式")]),t._v(" "),a("p",[t._v("上面两种方案是针对特殊场景的，如果一个项目中很多组件都出现问题需要处理，一个简单解决方案是禁用严格模式，打开 "),a("code",[t._v("src/index.js")]),t._v(" 文件并删除 "),a("code",[t._v("StrictMode")]),t._v(" 高阶组件。")]),t._v(" "),a("p",[t._v("实际严格模式是有很大作用的，所以一般都不应该禁用掉，这种情况下更应该考虑组件的实现上是不是有什么不合理的地方。")]),t._v(" "),a("h3",{attrs:{id:"其他方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他方案"}},[t._v("#")]),t._v(" 其他方案")]),t._v(" "),a("p",[t._v("还可以不使用默认的 "),a("code",[t._v("useEffect")]),t._v("，自定义个一个 hook 处理类似的情况，可以参考 "),a("a",{attrs:{href:"https://dev.to/ag-grid/react-18-avoiding-use-effect-getting-called-twice-4i9e",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 18 - Avoiding Use Effect Getting Called Twice"),a("OutboundLink")],1),t._v(" 或 "),a("a",{attrs:{href:"https://stackoverflow.com/questions/72238175/react-18-useeffect-is-getting-called-two-times-on-mount",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 18, useEffect is getting called two times on mount"),a("OutboundLink")],1),t._v(" 中的回答。")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ensuring reusable state"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.bitsrc.io/react-v18-0-useeffect-bug-why-do-effects-run-twice-39babecede93",target:"_blank",rel:"noopener noreferrer"}},[t._v("Why does useEffect Run Twice in React v18.0?"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.techiediaries.com/react-18-useeffect/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 18 useEffect runs twice"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);